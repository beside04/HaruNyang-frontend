# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  def updateVersion(options)
    if options[:version]
      version = options[:version]
    else
      version = prompt(text: "Enter the version type or specific version\n(major, minor, patch or 1.0.0): ")
    end

    re = /\d+.\d+.\d+/
    versionNum = version[re, 0]

    if versionNum
      increment_version_number(
        version_number: versionNum
      )
    elsif version == 'major' || version == 'minor' || version == 'patch'
      increment_version_number(
        bump_type: version
      )
    else
      UI.user_error!('[ERROR] Wrong version!!!!!!')
    end
  end

  lane :version do |options|
    updateVersion(options)
    increment_build_number(xcodeproj: 'Runner.xcodeproj')
    end

  lane :beta do |options|
  increment_build_number(
      build_number: latest_testflight_build_number + 1,
      xcodeproj: "Runner.xcodeproj"
      )
  flutter_build_ios
   build_app(
    workspace: 'Runner.xcworkspace',
    scheme: 'Runner',
  )
  upload_to_testflight()
  send_slack_message(msg: "🚀 Successfully distributed a new build ✨")
  end

   lane :release do |options|
   increment_build_number(
         build_number: latest_testflight_build_number + 1,
         xcodeproj: "Runner.xcodeproj"
         )
     flutter_build_ios
      build_app(
         workspace: 'Runner.xcworkspace',
         scheme: 'Runner',
       )
      upload_to_app_store(
        force: true,
        reject_if_possible: true,
        skip_metadata: false,
        skip_screenshots: true,
        languages: ['en-US', 'ja','ko'],
        release_notes: {
          "default" => "버그 수정",
          "en-US" => "bug fixed",
          "ja" => "バグ修正",
          "ko" => "버그 수정"
        },
        submit_for_review: true,
        automatic_release: true,
        submission_information: {
        add_id_info_uses_idfa: false,
        export_compliance_uses_encryption: false }
      )
      send_slack_message(msg: "🚀 Successfully distributed a new build ✨")
    end

  # Send slack message
  lane :send_slack_message do |options|
    version = get_version_number(xcodeproj: "Runner.xcodeproj")
    build_number = get_build_number(xcodeproj: "Runner.xcodeproj")
    slack(
      message: options[:msg],
      payload: {
        "Version" => version,
        "Build" => build_number
      },
    )
  end

    # Flutter build iOS
  lane :flutter_build_ios do
    sh("cd", "..")

    puts "Flutter clean"
    sh("flutter", "clean")

    puts "Flutter build iOS"
    sh("flutter", "build", "ios", "--no-codesign", "-t", "lib/main.dart")
  end
end